function BigTableRow({attackType}){
    const types = ['normal', 'fire', 'water', 'grass', 'elec', 'ice', 'fight', 'poison', 'ground', 'flying','esper', 'bug', 'rock', 'ghost', 'dragon', 'dark', 'steel', 'fairy' ];

    const table = [
        [1,1,1,1,1,1,1,1,1,1,1,1,0.5,0,1,1,0.5,1],
        [1,0.5,0.5,2,1,2,1,1,1,1,1,2,0.5,1,0.5,1,2,1],
        [1,2,0.5,0.5,1,1,1,1,2,1,1,1,2,1,0.5,1,1,1],
        [1,0.5,2,0.5,1,1,1,0.5,2,0.5,1,0.5,2,1,0.5,1,0.5,1],
        [1,1,2,0.5,0.5,1,1,1,0,2,1,1,1,1,0.5,1,1,1],
        [1,0.5,0.5,2,1,0.5,1,1,2,2,1,1,1,1,2,1,0.5,1],
        [2,1,1,1,1,2,1,0.5,1,0.5,0.5,0.5,2,0,1,2,2,0.5],
        [1,1,1,2,1,1,1,0.5,0.5,1,1,1,0.5,0.5,1,1,0,2],
        [1,2,1,0.5,2,1,1,2,1,0,1,0.5,2,1,1,1,2,1],
        [1,1,1,2,0.5,1,2,1,1,1,1,2,0.5,1,1,1,0.5,1],
        [1,1,1,1,1,1,2,2,1,1,0.5,1,1,1,1,0,0.5,1],
        [1,0.5,1,2,1,1,0.5,0.5,1,0.5,2,1,1,0.5,1,2,0.5,0.5],
        [1,2,1,1,1,2,0.5,1,0.5,2,1,2,1,1,1,1,0.5,1],
        [0,1,1,1,1,1,1,1,1,1,2,1,1,2,1,0.5,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0.5,0],
        [1,1,1,1,1,1,0.5,1,1,1,2,1,1,2,1,0.5,1,0.5],
        [1,0.5,0.5,1,0.5,2,1,1,1,1,1,1,2,1,1,1,0.5,2],
        [1,0.5,1,1,1,1,2,0.5,1,1,1,1,1,1,2,2,0.5,1],
    ];

    return(
        <tr>
            { types.map((String, type)=>{
                if (table[attackType][type] === 2){
                    return (<td>O</td>);
                } else if (table[attackType][type] === 0.5){
                    return (<td>â–³</td>);
                } else if (table[attackType][type] === 0){
                    return (<td>X</td>);
                } else return (<td> </td>);
                })
            }
        </tr>
    )
}

export default BigTableRow;

